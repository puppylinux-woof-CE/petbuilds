# dropbear
# Builds from https://github.com/puppylinux-woof-CE/petbuilds

. ../func
. ../build.conf

URL=https://matt.ucc.asn.au/dropbear/releases
PKG=dropbear
VER=2014.66
COMP=tar.bz2
DESC="a very light weight ssh client and server"
DEPS=
CAT=BuildingBlock
DESKTOP=dropbear.desktop
BUILD=
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)	
[ -z "$BUILD" ] && BUILD=$DEF_BUILD

ARCH=$(uname -m)
case $ARCH in
 *64) LIBDIR=lib64 ;;
 *) LIBDIR=lib ;;
esac

build() {
	cd ${PKG}-${VER}
	./configure --prefix=/usr \
				--localstatedir=/var \
				--sysconfdir=/etc \
				--libdir=/usr/${LIBDIR} \
				--disable-syslog \
				--disable-utmp \
				--disable-utmpx \
				--disable-wtmp \
				--disable-wtmpx \
				--disable-pututline \
				--disable-pututxline
	[ "$?" -eq 0 ] || exit
	make PROGRAMS="dropbear dbclient dropbearkey dropbearconvert scp ssh" MULTI="1"
	[ "$?" -eq 0 ] || exit
	make install MULTI="1" DESTDIR=$CWD/${PKG}-install 
	cd -
}
	
package() {
	# EXTRAS
	install -d -m 0755 ${PKG}-install/etc/init.d
	install -m 0644 rc.dropbear ${PKG}-install/etc/init.d
	(cd ${PKG}-install/usr/bin; ln -sf dropbearmulti scp; ln -sf dropbearmulti ssh)
	get_files ${PKG}-install ${PKG}-${VER}-${ARCH}_${BUILD}
	(cd ${PKG}-${VER}; $MWD/split.sh ../${PKG}-install $BUILD)
	# add this recipe
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc
	cat ${PKG}.petbuild > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc/${PKG}-build-recipe
	if [ -f "$DESKTOP" ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications
		cat $DESKTOP > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications/$DESKTOP
	fi
	# delete any icon cache or library cache
	find ./${PKG}-${VER}-${ARCH}_${BUILD} -type f -name '*cache' -delete
	[ -f ./pinstall.sh ] && install -m 0755 pinstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	[ -f ./puninstall.sh ] && install -m 0755 puninstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	for p in $(ls|grep "\-${ARCH}_${BUILD}"|grep -v "files$") ; do
		case $p in
			*_DEV*) DESC="$PKG development"; DEPS=+${PKG} ;;
			*_DOC*) DESC="$PKG documentation"; DEPS=+${PKG} ;;
			*_NLS*) DESC="$PKG locales"; DEPS=+${PKG} ;;
		esac	
		echo "packaging $p"	
		dir2pet -x -s -w="$DESC" -d="$DEPS" -c="$CAT" -p=${p} 2>&1 >/dev/null
		rm -r $p
		mv ${p}.pet ../0pets_out
	done
	rm -r ${PKG}-install
	rm -r ${PKG}-${VER}
	mv -f *.files ../0logs
	echo "done!"
}

# main
retrieve "${PKG}-${VER}.${COMP} --no-check-certificate"
extract ${PKG}-${VER}.${COMP}
build
package	
