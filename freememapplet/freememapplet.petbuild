# freememapplet
# Builds from https://github.com/puppylinux-woof-CE/petbuilds

. ../func
. ../build.conf

URL=http://distro.ibiblio.org/puppylinux/sources/f
PKG=freememapplet
VER=2.8.6
COMP=tar.bz2
DESC="a tray applet that displays savefile space"
DEPS=+glib2
CAT=BuildingBlock
DESKTOP=freememapplet.desktop
BUILD=
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)	
[ -z "$BUILD" ] && BUILD=$DEF_BUILD

ARCH=$(uname -m)
case $ARCH in
 *64) LIBDIR=lib64 ;;
 *) LIBDIR=lib ;;
esac

build() {
	cd ${PKG}-${VER}
	./compile
	[ -x ./freememapplet_tray ] || exit
	
	cd -
}
	
package() {
	#get_files ${PKG}-install ${PKG}-${VER}-${ARCH}_${BUILD}
	mkdir -p ${PKG}-${VER}-${ARCH}_${BUILD}/usr/bin
	mkdir -p ${PKG}-${VER}-${ARCH}_${BUILD}/root/.config/autostart
	cp -af ${PKG}-${VER}/freememapplet_tray ${PKG}-${VER}-${ARCH}_${BUILD}/usr/bin/
	# add this recipe
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc
	cat ${PKG}.petbuild > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc/${PKG}-build-recipe
	cat > ./${PKG}-${VER}-${ARCH}_${BUILD}/root/.config/autostart/$DESKTOP << EOF
[Desktop Entry]
Encoding=UTF-8
Type=Application
NoDisplay=true
Name=freememapplet_tray
Exec=freememapplet_tray
EOF
	if [ -f "${PKG}-${VER}/$DESKTOP" ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications
		cat ${PKG}-${VER}/$DESKTOP > ./${PKG}-${VER}-${ARCH}_${BUILD}/root/.config/autostart/$DESKTOP
	fi
	# delete any icon cache or library cache
	find ./${PKG}-${VER}-${ARCH}_${BUILD} -type f -name '*cache' -delete
	[ -f ./pinstall.sh ] && install -m 0755 pinstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	[ -f ./puninstall.sh ] && install -m 0755 puninstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	for p in $(ls|grep "\-${ARCH}"|grep -v "files$") ; do
		case $p in
			*_DEV*) DESC="$PKG development"; DEPS=+${PKG} ;;
			*_DOC*) DESC="$PKG documentation"; DEPS=+${PKG} ;;
			*_NLS*) DESC="$PKG locales"; DEPS=+${PKG} ;;
		esac	
		echo "packaging $p"	
		dir2pet -x -s -w="$DESC" -d="$DEPS" -c="$CAT" -p=${p} 2>&1 >/dev/null
		rm -r $p
		mv ${p}.pet ../0pets_out
	done
	#rm -r ${PKG}-install
	rm -r ${PKG}-${VER}
	#mv -f *.files ../0logs
	echo "done!"
}

# main
retrieve ${PKG}-${VER}.${COMP}
extract ${PKG}-${VER}.${COMP}
build
package	
