# gnome-menus
# Builds from https://github.com/puppylinux-woof-CE/petbuilds

. ../func
. ../build.conf

PKG=gnome-menus
VER=2.14.3
URL=http://distro.ibiblio.org/puppylinux/sources/g/
COMP=tar.bz2
DESC="gnome-menus controls the heirarchy of the menu system"
DEPS=
CAT=BuildingBlock
BUILD=
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)	
[ -z "$BUILD" ] && BUILD=$DEF_BUILD

ARCH=`uname -m`
case $ARCH in
 *64) LIBDIR=lib64 ;;
 *) LIBDIR=lib ;;
esac

build() {
	# since not X compiling forget build triplet
	cd ${PKG}-${VER}
	./configure --prefix=/usr \
				--localstatedir=/var \
				--sysconfdir=/etc \
				--libdir=/usr/${LIBDIR} \
				--disable-python
	[ "$?" -eq 0 ] || exit
	make $MKFLG
	[ "$?" -eq 0 ] || exit
	make DESTDIR=$CWD/$PKG-install install
	cd -
}
	
package() {
echo "please wait..."
	get_files $PKG-install ${PKG}-${VER}-${ARCH}_${BUILD}
	(cd ${PKG}-${VER}; $MWD/split.sh ../$PKG-install $BUILD)
	# SPECIAL for gnome-menus
	rm -r ${PKG}-${VER}-${ARCH}_${BUILD}/etc
	[ -d "${PKG}-${VER}-${ARCH}_${BUILD}/usr/share" ] && \
	rm -r ${PKG}-${VER}-${ARCH}_${BUILD}/usr/share
	mv ${PKG}-${VER}-${ARCH}_${BUILD}/usr/bin ${PKG}_DEV-$VER-${ARCH}_${BUILD}/usr
	# add this recipe
	rm -r ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/* #remove some crud
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc
	cat ${PKG}.petbuild > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc/$PKG-build-recipe
	if [ "$DESKTOP" ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications
		cat $DESKTOP > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications/$DESKTOP
	fi
	[ -f ./pinstall.sh ] && install -m 0755 pinstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	[ -f ./puninstall.sh ] && install -m 0755 puninstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	for p in `ls|grep "\-${ARCH}"|grep -v "files$"` ; do
		case $p in
			*_DEV*) DESC="$PKG development"; DEPS=+${PKG} ;;
			*_DOC*) DESC="$PKG documentation"; DEPS=+${PKG} ;;
			*_NLS*) DESC="$PKG locales"; DEPS=+${PKG} ;;
		esac	
		echo "packaging $p"	
		dir2pet -x -s -w="$DESC" -d="$DEPS" -c=$CAT -p=${p} 2>&1 >/dev/null
		rm -r $p
		mv ${p}.pet ../0pets_out
	done
	rm -r $PKG-install
	rm -r ${PKG}-${VER}
	mv -f *.files ../0logs
	echo "done!"
}

# main
retrieve ${PKG}-${VER}.${COMP}
extract ${PKG}-${VER}.${COMP}
build
package	
