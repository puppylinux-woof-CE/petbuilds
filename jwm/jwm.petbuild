# jwm
# Builds from https://github.com/puppylinux-woof-CE/petbuilds

. ../func
. ../build.conf

#URL=http://joewing.net/projects/jwm/snapshots/
URL=http://www.joewing.net/projects/jwm/releases/
PKG=jwm
VER=2.3.1
COMP=tar.xz
DESC="Joes Window Manager for X"
DEPS=+cairo,+rsvg,+libpng,+libjpeg,+xpm,+fribidi
CAT=Desktop
BUILD=
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)	
[ -z "$BUILD" ] && BUILD=$DEF_BUILD

ARCH=`uname -m`
case $ARCH in
 *64) LIBDIR=lib64 ;;
 *) LIBDIR=lib ;;
esac

build() {
	# since not X compiling forget build triplet
	cd ${PKG}-${VER}
	./configure --prefix=/usr \
				--localstatedir=/var \
				--sysconfdir=/etc \
				--libdir=/usr/${LIBDIR}
	[ "$?" -eq 0 ] || exit
	make
	[ "$?" -eq 0 ] || exit
	make DESTDIR=$CWD/$PKG-install install
	cd -
}

package() {
	get_files $PKG-install ${PKG}-${VER}-${ARCH}_${BUILD}
	(cd ${PKG}-${VER}; $MWD/split.sh ../$PKG-install $BUILD)
	# add this recipe
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc
	cat ${PKG}.petbuild > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc/$PKG-build-recipe
	if [ "$DESKTOP" ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications
		cat $DESKTOP > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications/$DESKTOP
	fi
	# extra procesing for ${PKG}
	echo "extra procesing for ${PKG}"
	# add XSLT
	XSLT=`find ${PKG}-${VER} -type f -name 'jwm*.xslt'`
	[ "$XSLT" ] && echo "installing $XSLT" && \
	install -m 0644 $XSLT ${PKG}-${VER}-${ARCH}_${BUILD}/etc
	if [ -f fixjwmrc ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/local/bin
		install -m 0755 fixjwmrc ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/local/bin
	fi
	#jwm needs to be stripped these days
	find ${PKG}-${VER}-${ARCH}_${BUILD} | xargs file | grep -e "executable" -e "shared object" \
		| grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
	[ -f ./pinstall.sh ] && install -m 0755 pinstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	[ -f ./puninstall.sh ] && install -m 0755 puninstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	for p in `ls|grep "\-${ARCH}"|grep -v "files$"` ; do
		case $p in
			*_DEV*) DESC="$PKG development"; DEPS=+${PKG} ;;
			*_DOC*) DESC="$PKG documentation"; DEPS=+${PKG} ;;
			*_NLS*) DESC="$PKG locales"; DEPS=+${PKG} ;;
		esac	
		echo "packaging $p"	
		dir2pet -x -s -w="$DESC" -d="$DEPS" -c=$CAT -p=${p} 2>&1 >/dev/null
		rm -r $p
		mv ${p}.pet ../0pets_out
	done
	rm -r $PKG-install
	rm -r ${PKG}-${VER}
	mv -f *.files ../0logs
	echo "done!"
}

# main
retrieve ${PKG}-${VER}.${COMP}
extract ${PKG}-${VER}.${COMP}
build
package	
