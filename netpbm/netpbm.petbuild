# netpbm
# Builds from https://github.com/puppylinux-woof-CE/petbuilds

. ../func
. ../build.conf

URL=http://distro.ibiblio.org/puppylinux/sources/n
PKG=netpbm
VER=10.49.02
COMP=tar.xz
DESC="a comprehensive suite of image manipulaton tools"
DEPS=+libjpeg,+libpng
CAT=BuildingBlock
DESKTOP=netpbm.desktop
BUILD=
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)	
[ -z "$BUILD" ] && BUILD=$DEF_BUILD

ARCH=$(uname -m)
case $ARCH in
 *64) LIBDIR=lib64 ;;
 *) LIBDIR=lib ;;
esac

build() {
	cd ${PKG}-${VER}
	if [ "$ARCH" = "x86_64" ]; then
	  cat $CWD/config.mk \
	    | sed -e '/^CFLAGS/s/^CFLAGS = .*/& -fPIC/' > config.mk
	else
	  cat $CWD/config.mk > config.mk
	fi
	[ "$?" -eq 0 ] || exit
	make
	[ "$?" -eq 0 ] || exit
	make package pkgdir=$CWD/${PKG}-install
	# FIX path .. directly from SlackBuild, Patrick J. Volkerding, Sebeka, MN, USA
	( cd $CWD/${PKG}-install
	  rm README
	  mkdir -p usr
	  mv * usr 2>/dev/null
	  cd usr
	  mkdir -p share/doc/netpbm-$VERSION
	  mv man share/
	  mv VERSION bin/doc.url share/doc/netpbm-$VERSION
	  ( cd lib ; ln -sf libnetpbm.so.10 libnetpbm.so )
	  mv lib ${LIBDIR}
	  rm -rf config_template link misc pkginfo man/man1/manweb.1 man/web
	)
	cd -
}
	
package() {
	get_files ${PKG}-install ${PKG}-${VER}-${ARCH}_${BUILD}
	(cd ${PKG}-${VER}; $MWD/split.sh ../${PKG}-install $BUILD)
	# add this recipe
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc
	cat ${PKG}.petbuild > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/doc/${PKG}-build-recipe
	if [ -f "$DESKTOP" ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications
		cat $DESKTOP > ./${PKG}-${VER}-${ARCH}_${BUILD}/usr/share/applications/$DESKTOP
	fi
	# delete any icon cache or library cache
	find ./${PKG}-${VER}-${ARCH}_${BUILD} -type f -name '*cache' -delete
	[ -f ./pinstall.sh ] && install -m 0755 pinstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	[ -f ./puninstall.sh ] && install -m 0755 puninstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	for p in $(ls|grep "\-${ARCH}_${BUILD}"|grep -v "files$") ; do
		case $p in
			*_DEV*) DESC="$PKG development"; DEPS=+${PKG} ;;
			*_DOC*) DESC="$PKG documentation"; DEPS=+${PKG} ;;
			*_NLS*) DESC="$PKG locales"; DEPS=+${PKG} ;;
		esac	
		echo "packaging $p"	
		dir2pet -x -s -w="$DESC" -d="$DEPS" -c="$CAT" -p=${p} 2>&1 >/dev/null
		rm -r $p
		mv ${p}.pet ../0pets_out
	done
	rm -r ${PKG}-install
	rm -r ${PKG}-${VER}
	mv -f *.files ../0logs
	echo "done!"
}

# main
retrieve ${PKG}-${VER}.${COMP}
extract ${PKG}-${VER}.${COMP}
build
package	
